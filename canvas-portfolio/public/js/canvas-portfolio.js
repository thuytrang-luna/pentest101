/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return $; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return $window; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return $doc; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return $body; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return cnvsport; });
// Create csco object.
var cnvsport = {
	addAction: function (x, y, z) {
		return;
	}
};

if ('undefined' !== typeof wp && 'undefined' !== typeof wp.hooks) {
	cnvsport.addAction = wp.hooks.addAction;
}

if ('undefined' === typeof window.load_more_query) {
	window.load_more_query = [];
}

/**
 * Window size
 */
const $ = jQuery;
const $window = $(window);
const $doc = $(document);
const $body = $('body');

/**
 * In Viewport checker
 */
$.fn.isInViewport = function () {
	var elementTop = $(this).offset().top;
	var elementBottom = elementTop + $(this).outerHeight();

	var viewportTop = $(window).scrollTop();
	var viewportBottom = viewportTop + $(window).height();

	return elementBottom > viewportTop && elementTop < viewportBottom;
};



/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(2);
module.exports = __webpack_require__(3);


/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utility__ = __webpack_require__(0);
/**
 * AJAX Load More.
 *
 * Contains functions for AJAX Load More.
 */



/**
 * Insert Load More
 */
function cnvsport_portfolio_load_more_insert(container, settings) {
	if ('none' === settings.pagination_type) {
		return;
	}

	if (Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).find('.cnvs-portfolio-area__pagination').length) {
		return;
	}

	Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).append('<div class="cnvs-portfolio-area__pagination"><button class="cnvs-portfolio-load-more">' + settings.translation.load_more + '</button></div>');
}

/**
 * Get next posts
 */
function cnvsport_portfolio_ajax_get_posts(container, reload) {
	var pagination = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).find('.cnvs-portfolio-area__pagination');
	var loadMore = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).find('.cnvs-portfolio-load-more');
	var settings = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).data('settings');
	var page = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).data('page');

	// Filter terms.
	var terms = [];

	Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).find('.cnvs-portfolio-area-filter__list li').each(function (index, elem) {
		if (Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).is('.cnvs-filter-active:not(.cnvs-filter-all)')) {
			terms.push(Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).find('a').data('filter'));
		}
	});

	// Set area loading.
	Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).find('.cnvs-portfolio-area__main').addClass('cnvs-portfolio-loading');

	// Set ajax settings.
	if (reload) {
		page = 1;
	}

	var data = {
		action: 'cnvsport_portfolio_ajax_load_more',
		terms: terms,
		page: page,
		posts_per_page: settings.posts_per_page,
		query_data: settings.query_data,
		attributes: settings.attributes,
		options: settings.options,
		_ajax_nonce: settings.nonce
	};

	// Set the loading state.
	Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).data('loading', true);

	// Set button text to Load More.
	Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(loadMore).text(settings.translation.loading);

	// Request Url.
	var cnvsport_pagination_url;

	if ('ajax_restapi' === settings.type) {
		cnvsport_pagination_url = settings.rest_url;
	} else {
		cnvsport_pagination_url = settings.url;
	}

	// Send Request.
	__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */].post(cnvsport_pagination_url, data, function (res) {
		if (res.success) {

			// Get the posts.
			var data = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(res.data.content);

			data.imagesLoaded(function () {

				// Append new posts to list, standard and grid archives.
				if (reload) {
					Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).find('.cnvs-portfolio-area__main').html(data);
				} else {
					Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).find('.cnvs-portfolio-area__main').append(data);
				}

				// Entry animations.
				Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).find('.cnvs-portfolio-entry-request').each(function () {
					if (!Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).is('cnvs-portfolio-entry-animation')) {
						Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).addClass('cnvs-portfolio-entry-animation').animate({ opacity: 1, top: 0 }, 600);
					}
				});

				// WP Post Load trigger.
				Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(document.body).trigger('post-load');

				// Reinit Facebook widgets.
				if (Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])('#fb-root').length) {
					FB.XFBML.parse();
				}

				// Set button text to Load More.
				Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(loadMore).text(settings.translation.load_more);

				// Increment a page.
				page = page + 1;

				Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).data('page', page);

				// Set the loading state.
				Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).data('loading', false);
			});

			// Remove Button on Posts End.
			if (res.data.posts_end || !data.length) {

				// Remove Load More button.
				Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(pagination).remove();
			} else {

				// Add Load More button.
				cnvsport_portfolio_load_more_insert(container, settings);
			}

			Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).find('.cnvs-portfolio-area__main').removeClass('cnvs-portfolio-loading');
		} else {
			Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).find('.cnvs-portfolio-area__main').removeClass('cnvs-portfolio-loading');
		}
	}).fail(function (xhr, textStatus, e) {
		// console.log(xhr.responseText);
	});
}

/**
 * Initialization Load More
 */
function cnvsport_portfolio_load_more_init(infinite, blockId) {

	Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])('.cnvs-portfolio-area').each(function () {

		var cnvsport_ajax_settings;

		if (blockId) {
			let itemId = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).closest(`[data-block]`).attr('id');

			if (itemId !== blockId) {
				return;
			}
		} else if (Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).data('init')) {
			return;
		}

		var archive_data = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).data('items-area');

		if (archive_data) {
			cnvsport_ajax_settings = JSON.parse(window.atob(archive_data));
		}

		if (cnvsport_ajax_settings) {
			// Set load more settings.
			Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).data('settings', cnvsport_ajax_settings);
			Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).data('page', 2);
			Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).data('loading', false);
			Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).data('scrollHandling', {
				allow: __WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */].parseJSON('infinite' === cnvsport_ajax_settings.pagination_type ? true : false),
				delay: 400
			});

			if (!infinite && ('infinite' === cnvsport_ajax_settings.pagination_type ? true : false)) {
				return;
			}

			// Add load more button.
			if (cnvsport_ajax_settings.max_num_pages > 1) {
				cnvsport_portfolio_load_more_insert(this, cnvsport_ajax_settings);
			}
		}

		Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).data('init', true);
	});
}

cnvsport_portfolio_load_more_init(true, false);

__WEBPACK_IMPORTED_MODULE_0__utility__["e" /* cnvsport */].addAction('canvas.components.serverSideRender.onChange', 'portfolio-init-loadmore', function (props) {
	if ('canvas/portfolio' === props.block) {

		let blockId = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(`[id=block-${props.blockProps.clientId}]`).attr('id');

		cnvsport_portfolio_load_more_init(false, blockId);
	}
});

// On Scroll Event.
Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(window).scroll(function () {

	Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])('.cnvs-portfolio-area .cnvs-portfolio-load-more').each(function () {

		var container = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).closest('.cnvs-portfolio-area');

		// Vars loading.
		var loading = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).data('loading');
		var scrollHandling = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).data('scrollHandling');

		if ('undefined' === typeof scrollHandling) {
			return;
		}

		if (Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).length && !loading && scrollHandling.allow) {

			scrollHandling.allow = false;

			Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).data('scrollHandling', scrollHandling);

			setTimeout(function () {
				var scrollHandling = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).data('scrollHandling');

				if ('undefined' === typeof scrollHandling) {
					return;
				}

				scrollHandling.allow = true;

				Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(container).data('scrollHandling', scrollHandling);
			}, scrollHandling.delay);

			var offset = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).offset().top - Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(window).scrollTop();
			if (4000 > offset) {
				cnvsport_portfolio_ajax_get_posts(container);
			}
		}
	});
});

// On Click Event.
Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])('body').on('click', '.cnvs-portfolio-load-more', function () {
	var container = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).closest('.cnvs-portfolio-area');
	var loading = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).data('loading');

	if (!loading) {
		cnvsport_portfolio_ajax_get_posts(container, false);
	}
});

// On Click Categories.
Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])('body').on('click', '.cnvs-portfolio-area-filter__list a', function (e) {
	var container = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).closest('.cnvs-portfolio-area');

	// Remove active item.
	Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).parent().siblings().removeClass('cnvs-filter-active');

	// Active item.
	Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).parent().addClass('cnvs-filter-active');

	// Ajax.
	cnvsport_portfolio_ajax_get_posts(container, true);

	e.preventDefault();
});

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utility__ = __webpack_require__(0);
/** ----------------------------------------------------------------------------
 * Video Background */



var cnvsportVideoPortfolio = {};

(function () {
	var $this;
	var YTdeferredDone = false;
	var initAPI = false;
	var process = false;
	var contex = [];
	var players = [];
	var attrs = [];

	// Create deferred object
	var YTdeferred = __WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */].Deferred();

	if (typeof window.onYouTubePlayerAPIReady !== 'undefined') {
		if (typeof window.cnvsportYTAPIReady === 'undefined') {
			window.cnvsportYTAPIReady = [];
		}
		window.cnvsportYTAPIReady.push(window.onYouTubePlayerAPIReady);
	}

	window.onYouTubePlayerAPIReady = function () {
		if (typeof window.cnvsportYTAPIReady !== 'undefined') {
			if (window.cnvsportYTAPIReady.length) {
				window.cnvsportYTAPIReady.pop()();
			}
		}

		// Resolve when youtube callback is called
		// passing YT as a parameter.
		YTdeferred.resolve(window.YT);
	};

	// Whenever youtube callback was called = deferred resolved
	// your custom function will be executed with YT as an argument.
	YTdeferred.done(function (YT) {
		YTdeferredDone = true;
	});

	// Embedding youtube iframe api.
	function embedYoutubeAPI() {
		if ('function' === typeof window.onYTReady) {
			return;
		}

		var tag = document.createElement('script');
		tag.src = 'https://www.youtube.com/iframe_api';

		var firstScriptTag = document.getElementsByTagName('script')[0];
		firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
	}

	__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */].fn.contexObject = function (id, type) {
		if ('string' === typeof id) {
			id = `[data-id="${id}"]`;
		} else {
			id = this;
		}

		if ('wrap' === type) {
			return Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(id).closest('.cnvs-portfolio-video-wrap');
		} else if ('container' === type) {
			return Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(id).closest('.cnvs-portfolio-video-container');
		} else if ('inner' === type) {
			return Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(id).closest('.cnvs-portfolio-video-wrap').find('.cnvs-portfolio-video-inner');
		} else {
			return Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(id);
		}
	};

	// Object Video Portfolio.
	cnvsportVideoPortfolio = {

		/** Initialize */
		init: function (e) {
			if (Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])('body').hasClass('wp-admin')) {
				return;
			}

			$this = cnvsportVideoPortfolio;

			// Init events.
			$this.events(e);
		},

		// Video rescale.
		rescaleVideoBackground: function () {
			Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])('.cnvs-portfolio-video-init').each(function () {
				let w = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).parent().width();
				let h = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).parent().height();

				var hideControl = 400;

				let id = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).attr('data-id');

				if (w / h > 16 / 9) {
					if ('youtube' === Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).parent().data('video-mode')) {
						players[id].setSize(w, w / 16 * 9 + hideControl);
					} else {
						players[id].width(w);
						players[id].height(w / 16 * 9 + hideControl);
					}
				} else {
					if ('youtube' === Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).parent().data('video-mode')) {
						players[id].setSize(h / 9 * 16, h + hideControl);
					} else {
						players[id].width(h / 9 * 16);
						players[id].height(h + hideControl);
					}
				}
			});
		},

		// Init video background.
		initVideoBackground: function (mode, object) {

			Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])('.cnvs-portfolio-video-inner').each(function () {

				// The mode.
				if (!Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).parent().is(`[data-video-mode="${mode}"]`)) {
					return;
				}

				// The state.
				var isInit = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).hasClass('cnvs-portfolio-video-init');

				var id = null;

				// Generate unique ID.
				if (!isInit) {
					id = Math.random().toString(36).substr(2, 9);
				} else {
					id = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).attr('data-id');
				}

				// Create contex.
				contex[id] = this;

				// The monitor.
				var isInView = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(contex[id]).isInViewport();

				// The actived.
				var isActive = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(contex[id]).hasClass('active');

				// Get video attrs.
				var youtubeID = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(contex[id]).parent().data('youtube-id');
				var videoType = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(contex[id]).parent().data('video-type');
				var videoStart = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(contex[id]).parent().data('video-start');
				var videoEnd = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(contex[id]).parent().data('video-end');

				// Initialization.
				if (isInView && !isInit) {

					// Add init class.
					Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(contex[id]).addClass('cnvs-portfolio-video-init');

					// Add unique ID.
					Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(contex[id]).attr('data-id', id);

					// Check video mode.
					if ('youtube' === mode) {
						// Check video id.
						if (typeof youtubeID === 'undefined' || !youtubeID) {
							return;
						}

						// Video attrs.
						attrs[id] = {
							'videoId': youtubeID,
							'startSeconds': videoStart,
							'endSeconds': videoEnd,
							'suggestedQuality': 'hd720'
						};

						// Creating a player.
						players[id] = new YT.Player(contex[id], {
							playerVars: {
								autoplay: 0,
								autohide: 1,
								modestbranding: 1,
								rel: 0,
								showinfo: 0,
								controls: 0,
								disablekb: 1,
								enablejsapi: 0,
								iv_load_policy: 3,
								playsinline: 1,
								loop: 1
							},
							events: {
								'onReady': function () {
									players[id].cueVideoById(attrs[id]);
									players[id].mute();

									if ('always' === videoType) {
										$this.playVideo(id);
									}
								},
								'onStateChange': function (e) {
									if (e.data === 1) {
										Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).contexObject(id).closest('.cnvs-portfolio-video-wrap').addClass('cnvs-portfolio-video-bg-init');
										Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).contexObject(id).addClass('active');
									} else if (e.data === 0) {
										players[id].seekTo(attrs[id].startSeconds);
									}
								}
							}
						});
					} else {
						// Creating a player.
						players[id] = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(contex[id]);

						// Ready play.
						players[id].on('canplay', function () {
							if (true !== players[id].start) {
								players[id].start = true;

								this.currentTime = videoStart ? videoStart : 0;

								if ('always' === videoType) {
									$this.playVideo(id);
								}
							}
						});

						// Play.
						players[id].on('play', function () {
							players[id].parents('.cnvs-portfolio-video-wrap').addClass('cnvs-portfolio-video-bg-init');
							players[id].addClass('active');
						});

						// Ended.
						players[id].on('timeupdate', function () {
							if (videoEnd && this.currentTime >= videoEnd) {
								players[id].trigger('pause');

								this.currentTime = videoStart;

								players[id].trigger('play');
							}
						});

						players[id].trigger('load');
					}

					$this.rescaleVideoBackground();
				}

				// Pause and play.
				if ('always' === videoType && isActive && isInit && !$this.getVideoUpause(id)) {

					if (isInView) {
						$this.playVideo(id);
					}

					if (!isInView) {
						$this.pauseVideo(id);
					}
				}
			});
		},

		// Construct video background.
		constructVideoBackground: function (object) {
			if (Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])('body').hasClass('wp-admin')) {
				return;
			}

			if (process) {
				return;
			}

			process = true;

			// Smart init API.
			if (!initAPI) {
				let elements = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])('[data-video-mode="youtube"][data-youtube-id]');

				if (elements.length) {
					embedYoutubeAPI();

					initAPI = true;
				}
			}

			if (!initAPI) {
				process = false;
			}

			// Play Video.
			$this.initVideoBackground('local', object);

			if (initAPI && YTdeferredDone) {
				$this.initVideoBackground('youtube', object);
			}

			process = false;
		},

		// Get video type.
		getVideoType: function (id) {
			return Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).contexObject(id, 'container').data('video-type');
		},

		// Get video mode.
		getVideoMode: function (id) {
			return Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).contexObject(id, 'container').data('video-mode');
		},

		// Get video state.
		getVideoState: function (id) {
			return players[id].videoState;
		},

		// Get video upause.
		getVideoUpause: function (id) {
			return players[id].videoUpause ? players[id].videoUpause : false;
		},

		// Get video volume.
		getVideoVolume: function (id) {
			return players[id].videoVolume ? players[id].videoVolume : 'mute';
		},

		// Change video upause.
		changeVideoUpause: function (id, val) {
			players[id].videoUpause = val;
		},

		// Play video.
		playVideo: function (id) {
			if ('youtube' === $this.getVideoMode(id)) {
				players[id].playVideo();
			} else {
				players[id].trigger('play');
			}

			// Change control.
			let control = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).contexObject(id, 'wrap').find('.cnvs-portfolio-player-state');

			Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(control).removeClass('cnvs-portfolio-player-pause');
			Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(control).addClass('cnvs-portfolio-player-play');

			// Set state.
			players[id].videoState = 'play';
		},

		// Pause video.
		pauseVideo: function (id) {
			if ('youtube' === $this.getVideoMode(id)) {
				players[id].pauseVideo();
			} else {
				players[id].trigger('pause');
			}

			// Change control.
			let control = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).contexObject(id, 'wrap').find('.cnvs-portfolio-player-state');

			Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(control).removeClass('cnvs-portfolio-player-play');
			Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(control).addClass('cnvs-portfolio-player-pause');

			// Set state.
			players[id].videoState = 'pause';
		},

		// Unmute video.
		unmuteVideo: function (id) {
			if ('youtube' === $this.getVideoMode(id)) {
				players[id].unMute();
			} else {
				players[id].prop('muted', false);
			}

			// Change control.
			let control = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).contexObject(id, 'wrap').find('.cnvs-portfolio-player-volume');

			Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(control).removeClass('cnvs-portfolio-player-mute');
			Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(control).addClass('cnvs-portfolio-player-unmute');

			// Set state.
			players[id].videoVolume = 'unmute';
		},

		// Mute video.
		muteVideo: function (id) {
			if ('youtube' === $this.getVideoMode(id)) {
				players[id].mute();
			} else {
				players[id].prop('muted', true);
			}

			// Change control.
			let control = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).contexObject(id, 'wrap').find('.cnvs-portfolio-player-volume');

			Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(control).removeClass('cnvs-portfolio-player-unmute');
			Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(control).addClass('cnvs-portfolio-player-mute');

			// Set state.
			players[id].videoVolume = 'muted';
		},

		// Toogle video state.
		toogleVideoState: function (id) {
			if ('play' === $this.getVideoState(id)) {
				$this.pauseVideo(id);
			} else {
				$this.playVideo(id);
			}
		},

		// Toogle video volume.
		toogleVideoVolume: function (id) {
			if ('unmute' === $this.getVideoVolume(id)) {
				$this.muteVideo(id);
			} else {
				$this.unmuteVideo(id);
			}
		},

		/** Events */
		events: function (e) {
			// State Control.
			__WEBPACK_IMPORTED_MODULE_0__utility__["c" /* $doc */].on('click', '.cnvs-portfolio-player-state', function () {
				let id = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).contexObject(false, 'inner').attr('data-id');

				$this.toogleVideoState(id);

				if ('play' === $this.getVideoState(id)) {
					$this.changeVideoUpause(id, false);
				} else {
					$this.changeVideoUpause(id, true);
				}
			});

			// Stop Control.
			__WEBPACK_IMPORTED_MODULE_0__utility__["c" /* $doc */].on('click', '.cnvs-portfolio-player-stop', function () {
				let id = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).contexObject(false, 'inner').attr('data-id');

				if ('play' === $this.getVideoState(id)) {
					$this.changeVideoUpause(id, true);
				}

				$this.pauseVideo(id);
			});

			// Volume Control.
			__WEBPACK_IMPORTED_MODULE_0__utility__["c" /* $doc */].on('click', '.cnvs-portfolio-player-volume', function () {
				let id = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).contexObject(false, 'inner').attr('data-id');

				$this.toogleVideoVolume(id);
			});

			// Mouseover.
			__WEBPACK_IMPORTED_MODULE_0__utility__["c" /* $doc */].on('mouseover', '.cnvs-portfolio-entry__thumbnail', function () {
				let id = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).contexObject(false, 'inner').attr('data-id');

				if ('hover' === $this.getVideoType(id)) {
					$this.playVideo(id);
				}
			});

			// Mouseout.
			__WEBPACK_IMPORTED_MODULE_0__utility__["c" /* $doc */].on('mouseout', '.cnvs-portfolio-entry__thumbnail', function () {
				let id = Object(__WEBPACK_IMPORTED_MODULE_0__utility__["a" /* $ */])(this).contexObject(false, 'inner').attr('data-id');

				if ('hover' === $this.getVideoType(id)) {
					$this.pauseVideo(id);
				}
			});

			// Document scroll.
			__WEBPACK_IMPORTED_MODULE_0__utility__["d" /* $window */].on('load scroll resize scrollstop', function () {
				$this.constructVideoBackground();
			});

			// Document ready.
			__WEBPACK_IMPORTED_MODULE_0__utility__["c" /* $doc */].ready(function () {
				$this.constructVideoBackground();
			});

			// Post load.
			__WEBPACK_IMPORTED_MODULE_0__utility__["b" /* $body */].on('post-load', function () {
				$this.constructVideoBackground();
			});

			// Document resize.
			__WEBPACK_IMPORTED_MODULE_0__utility__["d" /* $window */].on('resize', function () {
				$this.rescaleVideoBackground();
			});

			// Init.
			$this.constructVideoBackground();
		}
	};
})();

// Initialize.
cnvsportVideoPortfolio.init();

/***/ })
/******/ ]);